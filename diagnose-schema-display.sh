#!/usr/bin/env bash

#===============================================================================
# G√©n√©rateur de Sch√©ma Complet - Affichage de tous les scripts par cat√©gorie
#===============================================================================
# Description : G√©n√®re un aper√ßu textuel de tous les scripts disponibles
# Objectif : Diagnostiquer pourquoi certains scripts n'apparaissent pas dans l'interface
#===============================================================================

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DATABASE_PATH="$SCRIPT_DIR/catalogue-scripts.db"

echo "üîç ANALYSE COMPL√àTE DU CATALOGUE DE SCRIPTS"
echo "==============================================="
echo ""

# V√©rification de la base
if [[ ! -f "$DATABASE_PATH" ]]; then
    echo "‚ùå Base de donn√©es non trouv√©e : $DATABASE_PATH"
    exit 1
fi

# Statistiques g√©n√©rales
echo "üìä STATISTIQUES G√âN√âRALES :"
sqlite3 "$DATABASE_PATH" << 'EOF'
.mode box
SELECT 
    'TOTAL' as M√©trique,
    COUNT(*) as Valeur
FROM scripts
UNION ALL
SELECT 
    'ATOMIQUES',
    COUNT(*)
FROM scripts WHERE type = 'atomic'
UNION ALL
SELECT 
    'ORCHESTRATEURS', 
    COUNT(*)
FROM scripts WHERE type = 'orchestrator';
EOF

echo ""
echo "üìã PAR CAT√âGORIE :"
sqlite3 "$DATABASE_PATH" << 'EOF'
.mode box
SELECT 
    category as Cat√©gorie,
    COUNT(*) as 'Nb Scripts',
    GROUP_CONCAT(DISTINCT type) as Types,
    GROUP_CONCAT(DISTINCT protocol) as Protocoles
FROM scripts 
GROUP BY category 
ORDER BY category;
EOF

echo ""
echo "üåê SCRIPTS R√âSEAU D√âTAILL√âS :"
sqlite3 "$DATABASE_PATH" << 'EOF'
.mode table
.headers on
SELECT 
    name as 'Nom du Script',
    type as 'Type',
    protocol as 'Protocole',
    level as 'Niveau',
    CASE 
        WHEN LENGTH(description) > 50 THEN SUBSTR(description, 1, 47) || '...'
        ELSE description 
    END as 'Description'
FROM scripts 
WHERE category = 'network'
ORDER BY protocol, type, name;
EOF

echo ""
echo "üîó RELATIONS ET D√âPENDANCES :"
sqlite3 "$DATABASE_PATH" << 'EOF'
.mode table  
.headers on
SELECT 
    s1.name as 'Script Parent',
    sr.relationship_type as 'Relation',
    s2.name as 'Script Enfant'
FROM script_relationships sr
JOIN scripts s1 ON sr.parent_script_id = s1.id
JOIN scripts s2 ON sr.child_script_id = s2.id
ORDER BY s1.name;
EOF

echo ""
echo "üè∑Ô∏è TAGS PAR SCRIPT SSH :"
sqlite3 "$DATABASE_PATH" << 'EOF'
.mode table
.headers on
SELECT 
    s.name as 'Script SSH',
    s.type as 'Type',
    GROUP_CONCAT(st.tag, ', ') as 'Tags'
FROM scripts s
LEFT JOIN script_tags st ON s.id = st.script_id
WHERE s.protocol = 'ssh'
GROUP BY s.name
ORDER BY s.type, s.name;
EOF

echo ""
echo "üîß DIAGNOSTIC INTERFACE GRAPHIQUE :"
echo "Les scripts suivants devraient appara√Ætre dans l'interface :"

# Liste pour diagnostic d'interface
sqlite3 "$DATABASE_PATH" << 'EOF'
SELECT 
    '- ' || name || ' (' || type || ', ' || protocol || ')'
FROM scripts 
WHERE category = 'network'
ORDER BY type DESC, protocol, name;
EOF

echo ""
echo "üí° RECOMMANDATIONS :"
echo "1. V√©rifier les filtres actifs dans l'interface graphique"
echo "2. S'assurer que l'interface charge la cat√©gorie 'network'"
echo "3. Contr√¥ler que les scripts SSH ne sont pas masqu√©s par un filtre de protocole"
echo "4. Rafra√Æchir le cache de l'interface si n√©cessaire"

echo ""
echo "üìÅ CHEMINS DES FICHIERS SCRIPTS SSH :"
sqlite3 "$DATABASE_PATH" << 'EOF'
.mode table
.headers on
SELECT 
    name as 'Script',
    file_path as 'Chemin'
FROM scripts 
WHERE protocol = 'ssh'
ORDER BY type, name;
EOF